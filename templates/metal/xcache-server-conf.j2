set rdtrCache={{ REDIR_HOST }}
set rdtrPortCmsd={{ REDIR_CMSD_PORT }}
set rdtrGlobal={{ ORIGIN_HOST }}
set rdtrGlobalPort={{ ORIGIN_XRD_PORT }}
set cacheLowWm={{ LOW_WM }}
set cacheHiWm={{ HI_WM }}
set cacheLogLevel={{ CACHE_LOG_LEVEL }}
set cachePath={{ CACHE_PATH }}
set cacheRam={{ CACHE_RAM_GB }}
set cacheStreams={{ STREAMS }}
set prefetch={{ N_PREFETCH }}
set blkSize={{ BLOCK_SIZE }}
all.manager $rdtrCache:$rdtrPortCmsd

# logging level for all the different activities
xrootd.trace info
ofs.trace info
xrd.trace info
cms.trace info
sec.trace info
pfc.trace $cacheLogLevel

if exec cmsd

# if the process is the cluster manager, just run in on the chosen port

all.role server
xrd.port $cmsdport

all.export / stage
oss.localroot $cachePath

else

# if the process is the xrd one, configure and start the cache service at the specified port

xrd.port $xrdport

##### GENERAL CONFIGURATION ######

# manage the work directory
all.export /
all.role  server
oss.localroot $cachePath

oss.space meta $cachePath/
oss.space data $cachePath/
pfc.spaces data meta

# in the system is overloaded fallback to remote read
xrootd.fsoverload redirect xrootd-cms.infn.it:1094

# For xrootd, load the proxy plugin and the disk caching plugin.
ofs.osslib   libXrdPss.so
pss.cachelib libXrdFileCache.so

# indicate the origin
pss.origin $rdtrGlobal:$rdtrGlobalPort

##### SECURITY CONFIGURATION ######
xrootd.seclib /usr/lib64/libXrdSec.so

# use gsi as client-cache authN method
sec.protocol /usr/lib64 gsi \
  -certdir:/etc/grid-security/certificates \
  -cert:{{ path_to_certs }}/xrdcert.pem \
  -key:{{ path_to_certs }}/xrdkey.pem \
  -d:3 \
  -crl:1

ofs.authorize 1
acc.audit deny grant

# use gsi user<-->namespace mapping file as client-cache authZ method
acc.authdb /etc/xrootd/Authfile-auth
sec.protbind * gsi


##### CACHE CONFIGURATION ######

pfc.diskusage $cacheLowWm $cacheHiWm
pfc.ram       ${cacheRam}g

# Tune the client timeouts to more aggressively timeout.
pss.setopt ParallelEvtLoop 10
pss.setopt RequestTimeout 25
pss.setopt ConnectTimeout 25
pss.setopt ConnectionRetry 2

# Standard values for streaming mode jobs
set cacheStreams=256
set prefetch=0
set blkSize=512k

pss.config streams $cacheStreams
pfc.blocksize   $blkSize
pfc.prefetch    $prefetch

fi
